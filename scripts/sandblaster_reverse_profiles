#!/bin/bash

source common

call_reverse()
{
    version="$1"
    sb_ops="$2"
    dest="$3"
    profile="$4"
    if [[ "$sb_ops" != /* ]]; then
        sb_ops=../../"$sb_ops"
    fi
    if [[ "$dest" != /* ]]; then
        dest=../../"$dest"
    fi
    if [[ "$profile" != /* ]]; then
        profile=../../"$profile"
    fi
    debug "Reversing sandbox profile(s) from $profile to $dest ..."
    debug "python2 reverse_sandbox.py -r "$version" -o "$sb_ops" -d "$dest" "$profile" 2> /dev/null"
    python2 reverse_sandbox.py -r "$version" -o "$sb_ops" -d "$dest" "$profile" 2> /dev/null
    warn_if_error
}

t=${base%_*}
version=${t##*_}
major=${version%%.*}

sb_ops="$out_dir"/sb_ops
if ! test -f "$sb_ops"; then
    error "There is no sb_ops file in $out_dir"
    exit 1
fi

dest="$out_dir"/reversed_profiles
if test -d "$dest"; then
    if_no_exit "Reversed sandbox profiles folder $dest already exists. Reversing has likely happened previously."
fi
mkdir -p "$dest"

if test "$major" -lt 9; then
    src="$out_dir"/sandbox_profiles
    if ! test -d "$src"; then
        error "There is no sandbox_profiles/ subfolder in $out_dir"
        exit 1
    fi

    profiles=("$src"/*)
    debug "Change working directory to ../tools/sandblaster/reverse-sandbox/"
    info "This step will take some time ..."
    cd ../tools/sandblaster/reverse-sandbox/
    for p in ${profiles[@]}; do
        call_reverse "$version" "$sb_ops" "$dest" "$p"
    done
else
    src="$out_dir"/sandbox_bundle
    if ! test -f "$src"; then
        error "There is no sandbox_bundle file in $out_dir"
        exit 1
    fi

    debug "Change working directory to ../tools/sandblaster/reverse-sandbox/"
    info "This step will take some time ..."
    cd ../tools/sandblaster/reverse-sandbox/
    call_reverse "$version" "$sb_ops" "$dest" "$src"
fi
